from glob import iglob
import pandas as pd

r1 = iglob('../mSp_scATAC-seq/rep*/trim_fq/*_r1_trimmed.fq.gz')

samples = pd.DataFrame()
samples['r1'] = [i for i in r1]
samples[['rep', 'cell']] = samples.r1.str.extract('../mSp_scATAC-seq/(.*)/trim_fq/(.*)_r1_trimmed\.fq\.gz', expand=True)
replicate = list(set(samples['rep'].values))

rule all:
    input:
        list(samples['rep'] + '/trim_fq/' + samples['cell'] + '_r1_ds_tr.fq.gz'),
        list(samples['rep'] + '/trim_fq/' + samples['cell'] + '_r2_ds_tr.fq.gz'),
        list(samples['rep'] + '/hisat2_mm10_mapped/' + samples['cell'] + '_f2q30.bam'),
        list(samples['rep'] + '/hisat2_mm10_log/' + samples['cell'] + '_aln_sum.txt'),
        list(samples['rep'] + '/picard_bam/' + samples['cell'] + '_f2q30_pmd.bam'),
        list(samples['rep'] + '/picard_bam/' + samples['cell'] + '_f2q30_pmd.bam.bai'),
        ['{}/bam_file_list.txt'.format(i) for i in replicate],
        ['{}/f2q30_merged.bam'.format(i) for i in replicate],
        'aggregate/f2q30_merged.bam',
        'aggregate/f2q30_merged_pmd.bam',
        'aggregate/f2q30_merged_pmd.out',
        'aggregate/aggregated_scATAC_peaks.narrowPeak',
        'aggregate/aggregated_scATAC_peaks.xls',
        'aggregate/aggregated_scATAC_summits.bed',
        'qc_metrics/dup_level.txt',
        'qc_metrics/mapping_rate.txt',
        'qc_metrics/mt_content.txt',
        'qc_metrics/sequencing_depth.txt',
        'qc_metrics/uniq_nuc_frags.txt',
        'qc_metrics/library_size.txt',
        'qc_metrics/frip.txt',
        'qc_metrics/frac_open.txt'

rule subsample:
    input:
        r1='../mSp_scATAC-seq/{rep}/trim_fq/{cell}_r1_trimmed.fq.gz',
        r2='../mSp_scATAC-seq/{rep}/trim_fq/{cell}_r2_trimmed.fq.gz'
    output:
        r1='{rep}/trim_fq/{cell}_r1_ds_tr.fq.gz',
        r2='{rep}/trim_fq/{cell}_r2_ds_tr.fq.gz'
    shell:
        ''' seqtk sample -s 42 {input.r1} 0.2 | gzip > {output.r1}
            seqtk sample -s 42 {input.r2} 0.2 | gzip > {output.r2}
        '''

rule hisat2:
    input:
        r1='{rep}/trim_fq/{cell}_r1_ds_tr.fq.gz',
        r2='{rep}/trim_fq/{cell}_r2_ds_tr.fq.gz'
    output:
        bam='{rep}/hisat2_mm10_mapped/{cell}_f2q30.bam',
        stats='{rep}/hisat2_mm10_log/{cell}_aln_sum.txt'
    threads: 4
    shell:
        ''' hisat2 \
            -X 2000 \
            -p {threads} \
            --no-spliced-alignment \
            -x /mnt/reference/mus_musculus/ucsc/mm10/hisat2_index/mm10_sm \
            -1 {input.r1} \
            -2 {input.r2} \
            --summary-file {output.stats} | \
            samtools view -ShuF 4 -f 2 -q 30 - | \
            samtools sort - -T {wildcards.cell}_tmp -o {output.bam}
        '''

rule spicard:
    input:
        '{rep}/hisat2_mm10_mapped/{cell}_f2q30.bam',
    output:
        bam='{rep}/picard_bam/{cell}_f2q30_pmd.bam',
        met='{rep}/picard_log/{cell}_f2q30_pmd.out',
    log:
        'logs/spicard/{rep}/{cell}.log'
    shell:
        ''' java -jar -Xmx4g \
            /home/ubuntu/picard_2.17.10/picard.jar \
            MarkDuplicates \
            INPUT={input} \
            OUTPUT={output.bam} \
            REMOVE_DUPLICATES=true \
            ASSUME_SORTED=true \
            METRICS_FILE={output.met} \
            2> {log}
        '''

rule index:
    input:
        '{rep}/picard_bam/{cell}_f2q30_pmd.bam'
    output:
        '{rep}/picard_bam/{cell}_f2q30_pmd.bam.bai'
    shell:
        ''' samtools index {input}
        '''

rule list_bam:
    input:
        expand('{rep}/picard_bam/{cell}_f2q30_pmd.bam', zip,
               rep=samples["rep"],
               cell=samples["cell"])
    output:
        expand('{rep}/bam_file_list.txt', rep=replicate)
    shell:
        ''' scripts/list_bam.sh
        '''

rule merge_rep:
    input:
        '{rep}/bam_file_list.txt'
    output:
        '{rep}/f2q30_merged.bam'
    shell:
        ''' samtools merge -b {input} {output}
        '''

rule merge_all:
    input:
        expand('{rep}/f2q30_merged.bam', rep=replicate)
    output:
        'aggregate/f2q30_merged.bam'
    shell:
        ''' samtools merge {output} {input}
        '''

rule mpicard:
    input:
        'aggregate/f2q30_merged.bam'
    output:
        bam='aggregate/f2q30_merged_pmd.bam',
        met='aggregate/f2q30_merged_pmd.out'
    log:
        'logs/mpicard/mpicard.log'
    shell:
        ''' java -jar -Xmx8g \
            /home/ubuntu/picard_2.17.10/picard.jar \
            MarkDuplicates \
            INPUT={input} \
            OUTPUT={output.bam} \
            REMOVE_DUPLICATES=true \
            ASSUME_SORTED=true \
            METRICS_FILE={output.met} \
            2> {log}
        '''

rule macs2:
    input:
        'aggregate/f2q30_merged_pmd.bam'
    output:
        'aggregate/aggregated_scATAC_peaks.narrowPeak',
        'aggregate/aggregated_scATAC_peaks.xls',
        'aggregate/aggregated_scATAC_summits.bed',
    log:
        'logs/macs2/aggregated_scATAC_macs2.log'
    shell:
        ''' macs2 callpeak -t {input} \
            -g mm \
            -f BAM \
            -q 0.01 \
            --nomodel \
            --shift -100 \
            --extsize 200 \
            --keep-dup all \
            --outdir aggregate \
            -n aggregated_scATAC \
            2> {log}
        '''

rule basicQc:
    input:
        expand('{rep}/picard_bam/{cell}_f2q30_pmd.bam', zip,
               rep=samples["rep"], cell=samples["cell"]),
        expand('{rep}/picard_bam/{cell}_f2q30_pmd.bam.bai', zip,
               rep=samples["rep"], cell=samples["cell"]),
        expand('{rep}/hisat2_mm10_log/{cell}_aln_sum.txt', zip,
               rep=samples["rep"], cell=samples["cell"])
    output:
        'qc_metrics/dup_level.txt',
        'qc_metrics/mapping_rate.txt',
        'qc_metrics/mt_content.txt',
        'qc_metrics/sequencing_depth.txt',
        'qc_metrics/uniq_nuc_frags.txt',
        'qc_metrics/library_size.txt'
    shell:
        ''' scripts/get_dup_level.sh
            scripts/get_depth_mr.sh
            scripts/get_ufrags_mt.sh
            scripts/get_lib_size.sh
        '''

rule frip:
    input:
        expand('{rep}/picard_bam/{cell}_f2q30_pmd.bam', zip,
               rep=samples["rep"], cell=samples["cell"]),
        expand('{rep}/picard_bam/{cell}_f2q30_pmd.bam.bai', zip,
               rep=samples["rep"], cell=samples["cell"]),
        'aggregate/aggregated_scATAC_peaks.narrowPeak'
    output:
        'qc_metrics/frip.txt'
    shell:
        ''' scripts/get_frip.sh
        '''

rule fracOpen:
    input:
        expand('{rep}/picard_bam/{cell}_f2q30_pmd.bam', zip,
               rep=samples["rep"], cell=samples["cell"]),
        'aggregate/aggregated_scATAC_peaks.narrowPeak'
    output:
        'qc_metrics/frac_open.txt'
    shell:
        ''' scripts/get_frac_open.sh
        '''
